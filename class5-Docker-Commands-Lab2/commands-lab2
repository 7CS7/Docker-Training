*******************************************************************************************************************************
To stop any running container

docker stop $(docker ps -q)  

*******************************************************************************************************************************
To remove all the containers

docker rm $(docker ps -a -q)

*******************************************************************************************************************************

To remove all docker images in a single command,
[root@docker-host ~]# docker rmi $(docker images -a -q)

*******************************************************************************************************************************

Remove all exited containers
You can locate containers using docker ps -a and filter them by their status: created, restarting, running, paused, or exited. 
To review the list of exited containers, use the -f flag to filter based on status. 
When you've verified you want to remove those containers, using -q to pass the IDs to the docker rm command.

List:

docker ps -a -f status=exited

Remove:

docker rm $(docker ps -a -f status=exited -q)

Remove containers using more than one filter.Docker filters can be combined by repeating the filter flag with an additional value. 
This results in a list of containers that meet either condition. 
For example, if you want to delete all containers marked as either Created (a state which can result when you run a container with an invalid command) or Exited, 
you can use two filters:

*******************************************************************************************************************************
List:

docker ps -a -f status=exited -f status=createdRemove:

docker rm $(docker ps -a -f status=exited -f status=created -q)

Remove containers according to a pattern
You can find all the containers that match a pattern using a combination of docker ps and grep. When you're satisfied that you have the list you want to delete, you can use awk and xargs to supply the ID to docker rmi. Note that these utilities are not supplied by Docker and not necessarily available on all systems:

List:

docker ps -a |  grep "pattern‚Äù

Remove:

docker ps -a | grep "pattern" | awk '{print $3}' | xargs docker rmi

Stop and remove all containers
You can review the containers on your system with docker ps. Adding the -a flag will show all containers. When you're sure you want to delete them, you can add the -q flag to supply the IDs to the docker stop and docker rm commands:

List:

docker ps -a
Remove:

docker stop $(docker ps -a -q)
docker rm $(docker ps -a -q)

to see the container statistics

docker stats 71207cb18cae

******************************************************************************************************************************
to see the docker master image history

docker history <imageid>

**************************************************

How to remove or delete Docker Images?
use "docker images" to find the Docker Image ID or Image Name and use "docker rmi" command  to remove or delete docker images.
[root@docker-host ~]# docker rmi 49f7960eb7e4

To remove multiple docker images, mention the docker images ID separated by spaces as below.
[root@docker-host ~]# docker rmi 49f7960eb7e4 47fjay738290 987tr78rt5g5

To remove all docker images in a single command,
[root@docker-host ~]# docker rmi $(docker images -a -q)
